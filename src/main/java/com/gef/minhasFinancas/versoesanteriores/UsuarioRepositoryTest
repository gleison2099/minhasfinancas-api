package com.gef.minhasFinancas.model.repository;

import org.assertj.core.api.Assertions;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit4.SpringRunner;

import com.gef.minhasFinancas.model.entity.Usuario;

// Sobe todo o contexto da aplicação para testar apenas uma classe
@SpringBootTest
@RunWith(SpringRunner.class)
@ActiveProfiles("test")
public class UsuarioRepositoryTest {
	
	@Autowired
	UsuarioRepository Repository;
	
	@Test
	public void deveVerificarAExistenciaDeUmEmail() {
		
		// Cenário
		Usuario usuario = Usuario.builder().nome("usuario").email("usuario@email.com").build();
		// Esta sendo usada a p´ropria clase testada para fazer cenário de outros testes
		Repository.save(usuario);
		
		// Ação/exceução
		boolean result = Repository.existsByEmail("usuario@email.com");
		
		// Verificação
		Assertions.assertThat(result).isTrue();
	}
	
	@Test
	public void deveRetirnarFalsoQuandoNaoHouverUsuarioCadastradoComOEmail() {
		
		// Cenário
		// Necessidade de deletar todo o cenário anterior para o teste.
		Repository.deleteAll();
		
		// Ação/exceução
		boolean result = Repository.existsByEmail("usuario@email.com");
		
		// Verificação
		Assertions.assertThat(result).isFalse();
	}

}
